{
  env: {
    env_type: gym_minigrid,
    env_task: MiniGrid-Dynamic-Obstacles,
    grid_size: 8,
    action_size: 3,
    rgb_image: true,
    tile_size: 4,
    goal_type: from_buffer,
    buffer_size: 10000,
    init_complexity: 5,
    complexity_step: 5,
    threshold: 0.8,
    max_complexity: 40,
    update_period: 100,
    goal_achieving_criterion: state_distance_network,
    state_distance_network_path: outputs/models/state_distance_encoder.p,
    device: "cuda:0",
    video_path: outputs/video/
  },

  state_distance_encoder: {
    state_encoder_type: simple_cnn,
    n_channels: [32, 64, 64],
    kernel_sizes: [4, 4, 3],
    strides: [4, 2, 1],
    hidden_layers_sizes: [32]
  },

  state_distance_network = {
    hidden_size: 128
  },

  state_distance_training: {
    device: "cuda:0"
    n_episodes: 1000,
    n_epochs: 5,
    verbose: 100,
  },

  worker: {
    state_encoder_type: simple_cnn,
    n_channels: [6, 16],
    kernel_sizes: [4, 3],
    max_pools: [4, 1],
    head: {
        hidden_size: 64
    }
  },

  master: {
    state_encoder_type: simple_cnn,
    n_channels: [6, 16],
    kernel_sizes: [4, 3],
    max_pools: [4, 1],
  }

  agent: {
    algorithm: DQN,
    device: "cuda:0",
    batch_size: 128,
    update_step: 4,
    buffer_size: 100000,
    learning_rate: 0.001,
    gamma: 0.9,
    eps_start: 1,
    eps_end: 0.1,
    eps_decay: 0.995,
    tau: 0.001
  },

  training: {
    reward: fair_goal_achievement,
    n_episodes: 3000,
    verbose: 100,
    max_steps: 40,
  },

  seed: 42,

  outputs: {
    save_example: true,
    state_distance_network_path: outputs/models/state_distance_encoder.p,
    path: outputs/models/dqn_first_step.p,
  }
}
